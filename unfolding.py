from ROOT import RooUnfold
from ROOT import RooUnfoldResponse
from ROOT import RooUnfoldInvert
from ROOT import RooUnfoldBayes
from ROOT import RooUnfoldSvd
from ROOT import RooUnfoldTUnfold
import ROOT



f1=ROOT.TFile.Open("ResponseMatrix.root")
reMBB=f1.Get("reMBB")
reMBE=f1.Get("reMBE")
reMBBn=f1.Get("reMBBn")
reMBEn=f1.Get("reMBEn")
genBB=f1.Get("genBB")
genBE=f1.Get("genBE")
recBB=f1.Get("recBB")
recBE=f1.Get("recBE")
f2=ROOT.TFile.Open("unfoldingSample.root")
hmuBE=f2.Get("hist_f26f74ed27824519bcad66a6f539b3e5")
hmuBB=f2.Get("hist_1405a58d67164a8bb28859df616bad3c")
f3=ROOT.TFile.Open("unfoldingMC.root")
hmuBE_mc=f3.Get("hist_bab6670dc2a946a7af6bdfbc761f87c5")
hmuBB_mc=f3.Get("hist_35313753f6e34206bd2294885ac1096f")
#f1.Close()
#f2.Close()
f=ROOT.TFile("unfoldSample.root","RECREATE")
responseBB=RooUnfoldResponse(recBB,genBB,reMBB,"reBB","reBB")
#responseBB.UseOverflow()
print recBB.GetNbinsX()
print reMBB.GetNbinsX()
#responseBB=RooUnfoldResponse(reMBB)
print "Print values of RooUnfold response matrix for BB category"
responseBB.Print()
print "Print values of response matrix for calculated by hand for BB category"
reMBBList=[]
for i in range(1,reMBB.GetNbinsX()+1):
	column=[]
	for j in range(1,reMBB.GetNbinsX()+1):
		column.append(reMBBn.GetBinContent(i,j))
	print column
invertBB=RooUnfoldInvert(responseBB,hmuBB,"UnfoldedBB","UnfoldedBB")
inverthmuBB=invertBB.Hreco()
hmuBB.Write()
inverthmuBB.Write()
c1=ROOT.TCanvas("c1","c1",800,800)
c1.SetLogx()
c1.SetLogy()
inverthmuBB.SetLineColor(2)
inverthmuBB.Draw("hist")
hmuBB.Draw("samehist")
#genBB.Draw()
c1.Print("test1.pdf")
responseBE=RooUnfoldResponse(recBE,genBE,reMBE,"reBB","reBB")
#responseBE.UseOverflow()
print "Print values of RooUnfold response matrix for BE category"
responseBE.Print()
print "Print values of response matrix for calculated by hand for BE category"
for i in range(1,reMBE.GetNbinsX()+1):
        column=[]
        for j in range(1,reMBB.GetNbinsX()+1):
                column.append(reMBEn.GetBinContent(i,j))
        print column
invertBE=RooUnfoldInvert(responseBE,hmuBE,"UnfoldedBE","UnfoldedBE")
inverthmuBE=invertBE.Hreco()
hmuBE.Write()
inverthmuBE.Write()
c2=ROOT.TCanvas("c2","c2",800,800)
c2.SetLogx()
c2.SetLogy()
inverthmuBE.SetLineColor(2)
inverthmuBE.Draw("hist")
hmuBE.Draw("samehist")
c2.Print("test2.pdf")
checkBB=RooUnfoldInvert(responseBB,recBB,"checkBB","checkBB")
histBB=checkBB.Hreco()
histBB.SetLineColor(2)
c3=ROOT.TCanvas("c3","c3",800,800)
c3.SetLogx()
c3.SetLogy()
histBB.GetXaxis().SetTitle("m[GeV]")
histBB.SetTitle("Unfolded reco and gen for BB")
DY1=ROOT.TLegend(0.1,0.7,0.3,0.9)
DY1.AddEntry(histBB,"reco")
DY1.AddEntry(genBB,"gen")
histBB.Draw("hist")
genBB.Draw("samehist")
DY1.Draw()
c3.Print("test3.pdf")

checkBE=RooUnfoldInvert(responseBE,recBE,"checkBE","checkBE")
histBE=checkBE.Hreco()
histBE.SetLineColor(2)
c4=ROOT.TCanvas("c4","c4",800,800)
c4.SetLogx()
c4.SetLogy()
histBE.GetXaxis().SetTitle("m[GeV]")
histBE.SetTitle("Unfolded reco and gen for BE")
DY2=ROOT.TLegend(0.1,0.7,0.3,0.9)
DY2.AddEntry(histBE,"reco")
DY2.AddEntry(genBE,"gen")
histBE.Draw("hist")
genBE.Draw("samehist")
DY2.Draw()
c4.Print("test4.pdf")

checkBB1=RooUnfoldBayes(responseBB,recBB)
histBB1=checkBB1.Hreco()
histBB1.SetLineColor(2)
c5=ROOT.TCanvas("c5","c5",800,800)
c5.SetLogx()
c5.SetLogy()
histBB1.GetXaxis().SetTitle("m[GeV]")
histBB1.SetTitle("Unfolded reco and gen for BB")
DY3=ROOT.TLegend(0.1,0.7,0.3,0.9)
DY3.AddEntry(histBB1,"reco")
DY3.AddEntry(genBB,"gen")
histBB1.Draw("hist")
genBB.Draw("samehist")
DY3.Draw()
c5.Print("test5.pdf")

checkBE1=RooUnfoldBayes(responseBE,recBE)
histBE1=checkBE1.Hreco()
histBE1.SetLineColor(2)
c6=ROOT.TCanvas("c6","c6",800,800)
c6.SetLogx()
c6.SetLogy()
histBE1.GetXaxis().SetTitle("m[GeV]")
histBE1.SetTitle("Unfolded reco and gen for BE")
DY4=ROOT.TLegend(0.1,0.7,0.3,0.9)
DY4.AddEntry(histBE1,"reco")
DY4.AddEntry(genBE,"gen")
histBE1.Draw("hist")
genBE.Draw("samehist")
DY4.Draw()
c6.Print("test6.pdf")
invertBB_mc=RooUnfoldInvert(responseBB,hmuBB_mc,"UnfoldedBB_mc","UnfoldedBB_mc")
inverthmuBB_mc=invertBB_mc.Hreco()
invertBE_mc=RooUnfoldInvert(responseBE,hmuBE_mc,"UnfoldedBE_mc","UnfoldedBE_mc")
inverthmuBE_mc=invertBE_mc.Hreco()
bayesBB_mc=RooUnfoldBayes(responseBB,hmuBB_mc,4,False,"bayesBBMC","bayesBBMC")
bayesBBhmu_mc=bayesBB_mc.Hreco()
bayesBE_mc=RooUnfoldBayes(responseBE,hmuBE_mc,4,False,"bayesBEMC","bayesBEMC")
bayesBEhmu_mc=bayesBE_mc.Hreco()
bayesBB=RooUnfoldBayes(responseBB,hmuBB,4,False,"bayesBB","bayesBB")
bayesBBhmu=bayesBB.Hreco()
bayesBE=RooUnfoldBayes(responseBE,hmuBE,4,False,"bayesBE","bayesBE")
bayesBEhmu=bayesBE.Hreco()
hmuBB_mc.Write()
hmuBE_mc.Write()
inverthmuBB_mc.Write()
inverthmuBE_mc.Write()
bayesBBhmu_mc.Write()
bayesBEhmu_mc.Write()
bayesBBhmu.Write()
bayesBEhmu.Write()
f.Close()

